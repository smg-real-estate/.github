name: Publish Docker image to ECR
on:
  workflow_call:
    inputs:
      push:
        required: true
        type: boolean
      image_path:
        required: true
        type: string
        description: Specifies path to Dockerfile
      image_name:
        required: true
        type: string
        description: specify the image name in ECR
      registries:
        required: false
        type: string
        description: >-
          A comma-delimited list of AWS account IDs that are associated with the ECR Private registries.
          If you do not specify a registry, the default ECR Private registry is assumed.
    secrets:
      DEPLOYER_ARN:
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  docker-image:
    name: Build Image for ECR
    runs-on: ubuntu-latest

    env:
      REPOSITORY: ${{ inputs.image_name }}
      IMAGE_TAG: ${{ github.sha }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: AWS credentials
      id: aws-login
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: eu-central-1
        role-to-assume: ${{ secrets.DEPLOYER_ARN }}
        role-duration-seconds: 3600
        role-skip-session-tagging: true

    - name: ECR login
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registries: ${{ steps.aws-login.outputs.aws-account-id }},${{ inputs.registries }}

    - name: Build
      env:
        REGISTRY: ${{ steps.aws-login.outputs.aws-account-id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
      run: | 
        BUILD_TIME=$(date +'%Y-%m-%d.%H%M%S')
        echo "Using registry: $REGISTRY"
        docker build -t ${REGISTRY}/${REPOSITORY}:${IMAGE_TAG} \
          -t ${REGISTRY}/${REPOSITORY}:${BUILD_TIME} \
          -t ${REGISTRY}/${REPOSITORY}:latest \
          ${{ inputs.image_path }}

    - name: Create ECR
      if: ${{ inputs.push == true }}
      env:
        REPOSITORY: ${{ inputs.image_name }}
      run: aws ecr describe-repositories --repository-names ${REPOSITORY}
        || aws ecr create-repository --repository-name ${REPOSITORY}

    - name: Publish
      env:
        REGISTRY: ${{ steps.aws-login.outputs.aws-account-id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
      if: ${{ inputs.push == true }}
      run: |
        docker push ${REGISTRY}/${REPOSITORY} --all-tags
