name: Deploys AWS CF stacks using CDK

on:
  workflow_call:
    inputs:
      cdk_arguments:
        required: false
        type: string
      env:
        required: false
        type: string
      image_name:
        required: true
        type: string
      image_options:
        required: false
        type: string
      outputs_stack_name:
        required: false
        type: string
    secrets:
      DEPLOYER_ARN:
        required: true
      DD_API_KEY:
        required: false
env:
  PRE_COMMIT_HOME: /tmp/.cache/pre-commit

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.image_name }}
      options: ${{ inputs.image_options }}
    environment:
      name: ${{ inputs.env }}
      url: ${{ steps.cdk-deploy.outputs.api_url }}/docs
    env:
      ENVIRONMENT: ${{ inputs.env }}
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
      OUTPUTS_STACK: ${{ inputs.outputs_stack_name }}-${{ inputs.env }}

    steps:
      - uses: actions/checkout@v3
      - uses: smg-real-estate/.github/.github/actions/poetry-dependencies/@v1
      - uses: aws-actions/configure-aws-credentials@v1
        id: aws-login
        with:
          aws-region: eu-central-1
          role-to-assume: ${{ secrets.DEPLOYER_ARN }}
          role-duration-seconds: 3600
          role-skip-session-tagging: true
      - id: cdk-deploy
        run: |
          poetry run cdk deploy \
            --require-approval=never \
            --all \
            --outputs-file ./cdk-outputs.json \
           ${{ inputs.cdk_arguments }}
            endpoint_url=$(jq -r ".[\"${OUTPUTS_STACK}\"].ApiEndpoint" ./cdk-outputs.json)
          echo "::set-output name=api_url::$endpoint_url"
      - name: 'Upload cdk-outputs'
        uses: actions/upload-artifact@v3
        with:
          name: cdk-outputs-${{ inputs.env }}
          path: ./cdk-outputs.json
          retention-days: 5
